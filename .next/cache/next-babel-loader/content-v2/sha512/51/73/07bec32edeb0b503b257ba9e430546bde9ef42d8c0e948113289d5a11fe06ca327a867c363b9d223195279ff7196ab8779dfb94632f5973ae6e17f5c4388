{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Fazztrack\\\\Tugas\\\\week 0\\\\Tugas2Week0\\\\tugas-3\\\\pages\\\\users.js\";\nimport Layout from \"../components/Layout\";\nimport Fetch from \"isomorphic-unfetch\";\n\nconst User = props => /*#__PURE__*/_jsxDEV(Layout, {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Id : \", props.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"NAME      : \", props.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"USERNAME   : \", props.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"EMAIL   : \", props.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"ADDRESS   :\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"STREET: \", props.address.street]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"SUITE: \", props.address.suite]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"CITY: \", props.address.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ZIP CODE: \", props.address.zipcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\"GEO :\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"LAT: \", props.address.geo.lat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"LNG: \", props.address.geo.lng]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\nUser.getInitialProps = async function () {\n  const res = await Fetch(\"https://jsonplaceholder.typicode.com/users/1\");\n  const data = await res.json();\n  return {\n    id: data.id,\n    name: data.name,\n    username: data.username,\n    email: data.email,\n    address: data.address // name:data.name,\n    // body:data.body,\n\n  };\n};\n\nexport default User;","map":{"version":3,"sources":["E:/Fazztrack/Tugas/week 0/Tugas2Week0/tugas-3/pages/users.js"],"names":["Layout","Fetch","User","props","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","getInitialProps","res","data","json"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAGA,MAAMC,IAAI,GAAIC,KAAD,iBACX,QAAC,MAAD;AAAA,yBACE;AAAA,4BACE;AAAA,0BAASA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iCAAgBD,KAAK,CAACE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,kCAAiBF,KAAK,CAACG,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,+BAAcH,KAAK,CAACI,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,6CACE;AAAA,+BAAYJ,KAAK,CAACK,OAAN,CAAcC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAWN,KAAK,CAACK,OAAN,CAAcE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,6BAAUP,KAAK,CAACK,OAAN,CAAcG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,iCAAcR,KAAK,CAACK,OAAN,CAAcI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,yCACE;AAAA,8BAAUT,KAAK,CAACK,OAAN,CAAcK,GAAd,CAAkBC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,8BAAUX,KAAK,CAACK,OAAN,CAAcK,GAAd,CAAkBE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;AAqBAb,IAAI,CAACc,eAAL,GAAuB,kBAAkB;AACvC,QAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAC,8CAAD,CAAvB;AAEA,QAAMiB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AACLf,IAAAA,EAAE,EAAEc,IAAI,CAACd,EADJ;AAELC,IAAAA,IAAI,EAACa,IAAI,CAACb,IAFL;AAGLC,IAAAA,QAAQ,EAACY,IAAI,CAACZ,QAHT;AAILC,IAAAA,KAAK,EAACW,IAAI,CAACX,KAJN;AAKLC,IAAAA,OAAO,EAACU,IAAI,CAACV,OALR,CAML;AACA;;AAPK,GAAP;AASD,CAdD;;AAgBA,eAAeN,IAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport Fetch from \"isomorphic-unfetch\";\n\n\nconst User = (props) => (\n  <Layout>\n    <div>\n      <p>Id : {props.id}</p>\n      <p>NAME      : {props.name}</p>\n      <p>USERNAME   : {props.username}</p>\n      <p>EMAIL   : {props.email}</p>\n      <div>ADDRESS   : \n        <p>STREET: {props.address.street}</p>\n        <p>SUITE: {props.address.suite}</p>\n        <p>CITY: {props.address.city}</p>\n        <p>ZIP CODE: {props.address.zipcode}</p>\n        <ul>GEO :\n          <li>LAT: {props.address.geo.lat}</li>\n          <li>LNG: {props.address.geo.lng}</li>\n        </ul>\n      </div>\n    </div>\n  </Layout>\n);\n\nUser.getInitialProps = async function () {\n  const res = await Fetch(\"https://jsonplaceholder.typicode.com/users/1\");\n\n  const data = await res.json();\n  \n  return {\n    id: data.id,\n    name:data.name,\n    username:data.username,\n    email:data.email,\n    address:data.address,\n    // name:data.name,\n    // body:data.body,\n  }\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}